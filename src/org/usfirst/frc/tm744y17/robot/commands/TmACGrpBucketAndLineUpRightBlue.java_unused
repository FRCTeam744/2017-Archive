package org.usfirst.frc.tm744y17.robot.commands;

import org.usfirst.frc.tm744y17.robot.subsystems.TmSsDrvGearShift;

import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 *
 */
public class TmACGrpBucketAndLineUpRightBlue extends CommandGroup {
	
	private static final double FORWARD_SPEED = 1.0;
	private static final double REVERSE_SPEED = -1.0;
	private static final double SPIN_SPEED = 1.0;

    public TmACGrpBucketAndLineUpRightBlue() {
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
    	addSequential(new TmCCmdDriveShiftGear(TmSsDrvGearShift.DrvGearsE.LOW));
        addSequential(new TmCCmdDriveForwardDistance(FORWARD_SPEED,FORWARD_SPEED,26.1));  //adjust value to bump the closer bucket
        addSequential(new TmCCmdDelay(3));
        addSequential(new TmCCmdDriveForwardDistance(SPIN_SPEED,-SPIN_SPEED,1.0));  //adjust to be 90 degree turn
        addSequential(new TmCCmdDelay(3));
        addSequential(new TmCCmdDriveForwardDistance(REVERSE_SPEED,REVERSE_SPEED,-1.96));   //adjust to hit activator without braking it
        addSequential(new TmCCmdDelay(3));
        addSequential(new TmCCmdDriveForwardDistance(FORWARD_SPEED,FORWARD_SPEED,1.96));  //adjust to go to previous position
        addSequential(new TmCCmdDelay(3));
        addSequential(new TmCCmdDriveForwardDistance(SPIN_SPEED,-SPIN_SPEED,1.0));  //adjust for a 90 degree turn
        addSequential(new TmCCmdDelay(3));
        addSequential(new TmCCmdDriveForwardDistance(REVERSE_SPEED,REVERSE_SPEED,-19.8));  //adjust to be close to shooting position
        addSequential(new TmCCmdDelay(3));
        // maybe addSequential(new TmCCmdDriveForwardDistance(1.0,-1.0,1.0));  //adjust to line up with goal
    }
}
